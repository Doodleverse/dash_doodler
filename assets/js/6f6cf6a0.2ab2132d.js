(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return c}));var a=n(3),r=n(7),i=(n(0),n(134)),o={title:"merge a 3-band and 1-band image",author:"Dan Buscombe",authorURL:"http://twitter.com/magic_walnut"},l={permalink:"/dash_doodler/blog/2020/07/31/blog-post",editUrl:"https://github.com/dbuscombe-usgs/dash_doodler/edit/master/website/blog/blog/2020-07-31-blog-post.md",source:"@site/blog/2020-07-31-blog-post.md",title:"merge a 3-band and 1-band image",description:"Doodler can use 1, 3, and 4-band input imagery. If the imagery is 3-band, it is assumed to be RGB and is, by default, augmented with 3 additional derivative bands.",date:"2020-07-31T00:00:00.000Z",formattedDate:"July 30, 2020",tags:[],readingTime:1.275,truncated:!1,prevItem:{title:"Splitting up large geoTIFF orthomosaics",permalink:"/dash_doodler/blog/2020/08/01/blog-post"},nextItem:{title:"no spaces in filenames!",permalink:"/dash_doodler/blog/2020/07/30/blog-post"}},b=[],p={toc:b};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"Doodler")," can use 1, 3, and 4-band input imagery. If the imagery is 3-band, it is assumed to be RGB and is, by default, augmented with 3 additional derivative bands."),Object(i.b)("p",null,"But how do you make a 4-band image from a 3-band image and a 1-band image?"),Object(i.b)("p",null,"That additional 1-band might be that acquired with an additional sensor, but might more commonly be a DEM (Digital Elevation Model) corresponding to the scene."),Object(i.b)("p",null,"I know of two ways. If you have ",Object(i.b)("inlineCode",{parentName:"p"},"gdal")," binaries installed, first strip the image into its component bands using ",Object(i.b)("inlineCode",{parentName:"p"},"gdal_translate")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"gdal_translate -b 1 data/images/4_rgb.png red.png\ngdal_translate -b 2 data/images/4_rgb.png green.png\ngdal_translate -b 3 data/images/4_rgb.png blue.png\n")),Object(i.b)("p",null,"Then merge them together using ",Object(i.b)("inlineCode",{parentName:"p"},"gdal_merge.py")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"gdal_merge.py -separate -o merged.tiff -co PHOTOMETRIC=MINISBLACK red.png green.png blue.png data/images/4_elev.png\n")),Object(i.b)("p",null,"The equivalent in python can be acheived without the ",Object(i.b)("inlineCode",{parentName:"p"},"gdal")," bindings, using the libraries already in your ",Object(i.b)("inlineCode",{parentName:"p"},"doodler")," conda environment"),Object(i.b)("p",null,"First, import libraries"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"import tifffile\nimport cv2\nimport numpy as np\n")),Object(i.b)("p",null,"Read RGB image"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"im1 = cv2.imread('data/images/4_rgb.png')\n")),Object(i.b)("p",null,"Read elevation and get just the first band (if this is 3-band)"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"im2 = cv2.imread('data/images/4_elev.png')[:,:,0]\n")),Object(i.b)("p",null,"If you had a 1-band elevation image, it would be this instead..."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"im2 = cv2.imread('data/images/4_elev.png')\n")),Object(i.b)("p",null,"Merge bands - creates a numpy array with 4 channels"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"merged = np.dstack((im1, im2))\n")),Object(i.b)("p",null,"Write the image to file"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"tifffile.imsave('test.tiff', merged)\n")),Object(i.b)("p",null,"You can use the following to read it back in"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"merged = tifffile.imread('test.tiff')\n")),Object(i.b)("p",null,"And verify with 'shape' - it should be 4 bands"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"merged.shape\n")))}c.isMDXComponent=!0},134:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return s}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),c=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,s=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return n?r.a.createElement(s,l(l({ref:t},p),{},{components:n})):r.a.createElement(s,l({ref:t},p))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);